{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUC,UAEpBG,EAAO,CAAEK,SAAAT,EAAUC,S,GAEpBA,E,IArCSS,SAASC,cAAc,SAI/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBASN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC3B,EAAc2B,EAAI,EAAGL,GAClBM,MAAK,SAAAC,G,IAAGC,EAAQD,EAARnB,SAAUR,EAAK2B,EAAL3B,MACjBJ,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAL,G,IAAGM,EAAQN,EAARnB,SAAUR,EAAK2B,EAAL3B,MAClBJ,EAAAiC,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAAN/B,EAAM,M,IAE9DoB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet position = 0;\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 0; i <= amountValue; i += 1) {\n    createPromise(i + 1, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position3","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","param","position1","Notify","success","concat","catch","position2","failure"],"version":3,"file":"03-promises.8fcea957.js.map"}