{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEnCC,EAAa,KACbC,EAAW,EACTC,EAAY,GAoBlB,SAASC,IACPC,YAAW,WACTH,GAAY,EACZI,MAAQH,EAAUG,MAClBC,EAAcL,EAAUI,OACC,IAArBH,EAAUK,SACdP,EAAaQ,aAAY,WACvBP,GAAY,EACZI,OAASH,EAAUO,KACnBH,EAAcL,EAAUI,OACpBH,EAAUK,QAAUN,GAAUS,cAAcV,E,GAC/CE,EAAUO,M,GACZP,EAAUG,M,CAGf,SAASC,EAAcK,EAAUN,GACTO,KAAKC,SAAW,GAEpClB,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANX,EAAM,OAE7DV,EAAAmB,OAAOG,QAAQ,sBAAuCD,OAAfL,EAAS,QAAYK,OAANX,EAAM,M,CAtChER,EAAQqB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYlB,EAAKgB,EAALhB,MAAOI,EAAIY,EAAJZ,KAAMF,EAAMc,EAANd,OAGrBiB,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAcH,OAAOlB,EAAOmB,OAElCxB,EAAUG,MAAQmB,EAClBtB,EAAUO,KAAOkB,EACjBzB,EAAUK,OAASqB,EAEnBzB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet intervalId = null;\nlet position = 0;\nconst userInput = {};\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  userInput.delay = delayValue;\n  userInput.step = stepValue;\n  userInput.amount = amountValue;\n\n  makePromise();\n}\nfunction makePromise() {\n  setTimeout(() => {\n    position += 1;\n    delay = userInput.delay;\n    createPromise(position, delay);\n    if (userInput.amount === 1) return;\n    intervalId = setInterval(() => {\n      position += 1;\n      delay += userInput.step;\n      createPromise(position, delay);\n      if (userInput.amount == position) clearInterval(intervalId);\n    }, userInput.step);\n  }, userInput.delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$userInput","$ce04d3a99e08e73b$var$makePromise","setTimeout","delay","$ce04d3a99e08e73b$var$createPromise","amount","setInterval","step","clearInterval","position1","Math","random","Notify","success","concat","failure","addEventListener","event","preventDefault","_elements","currentTarget","elements","delayValue","Number","value","stepValue","amountValue"],"version":3,"file":"03-promises.7199b72f.js.map"}